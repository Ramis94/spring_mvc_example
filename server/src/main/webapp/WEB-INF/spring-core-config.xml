<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:jpa="http://www.springframework.org/schema/data/jpa" xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/data/jpa
        http://www.springframework.org/schema/data/jpa/spring-jpa.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">

    <context:component-scan base-package="ru.innopolis.university.ramis" />

    <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
        <property name="driverClassName" value="${jdbc.driverClassName}" />
        <property name="url" value="${jdbc.url}" />
        <property name="username" value="${jdbc.username}" />
        <property name="password" value="${jdbc.password}" />
    </bean>

    <context:property-placeholder location="classpath:jdbc.properties"/>

    <bean id="emf"
          class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
        <property name="packagesToScan" value="ru.innopolis.university.ramis.entity" />
        <property name="dataSource" ref="dataSource" />

        <property name="jpaProperties">
            <props>
                <prop key="hibernate.show_sql">true</prop>
                <prop key="hibernate.hbm2ddl.auto">update</prop>
                <prop key="hibernate.dialect">org.hibernate.dialect.PostgreSQLDialect</prop>
            </props>
        </property>

        <property name="persistenceProvider">
            <bean class="org.hibernate.ejb.HibernatePersistence"/>
        </property>
    </bean>

    <bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
        <property name="entityManagerFactory" ref="emf" />
    </bean>
    <tx:annotation-driven transaction-manager="transactionManager"/>

    <jpa:repositories base-package="ru.innopolis.university.ramis.repository" entity-manager-factory-ref="emf"/>

    <bean id="userService" class="ru.innopolis.university.ramis.service.impl.UserServiceImpl"/>
    <bean id="userServiceImplDecorator" class="ru.innopolis.university.ramis.service.impl.UserServiceImplDecorator"/>
    <bean class="org.springframework.remoting.rmi.RmiServiceExporter">
        <property name="serviceName" value="UserService"/>
        <property name="service" ref="userServiceImplDecorator"/>
        <property name="serviceInterface" value="ru.innopolis.university.ramis.service.UserService"/>
        <property name="registryPort" value="1199"/>
    </bean>

    <bean id="studentService" class="ru.innopolis.university.ramis.service.impl.StudentServiceImpl"/>
    <bean class="org.springframework.remoting.rmi.RmiServiceExporter">
        <property name="serviceName" value="StudentService"/>
        <property name="service" ref="studentService"/>
        <property name="serviceInterface" value="ru.innopolis.university.ramis.service.StudentService"/>
        <property name="registryPort" value="1199"/>
    </bean>

    <bean id="lectureService" class="ru.innopolis.university.ramis.service.impl.LectureServiceImpl"/>
    <bean class="org.springframework.remoting.rmi.RmiServiceExporter">
        <property name="serviceName" value="LectureService"/>
        <property name="service" ref="lectureService"/>
        <property name="serviceInterface" value="ru.innopolis.university.ramis.service.LectureService"/>
        <property name="registryPort" value="1199"/>
    </bean>

    <bean id="studentLectureService" class="ru.innopolis.university.ramis.service.impl.StudentLectureServiceImpl"/>
    <bean class="org.springframework.remoting.rmi.RmiServiceExporter">
        <property name="serviceName" value="StudentLectureService"/>
        <property name="service" ref="studentLectureService"/>
        <property name="serviceInterface" value="ru.innopolis.university.ramis.service.StudentLectureService"/>
        <property name="registryPort" value="1199"/>
    </bean>

</beans>